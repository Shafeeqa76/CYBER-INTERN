# -*- coding: utf-8 -*-
"""LSB (Least Significant Bit) steganography

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Gn6EVzSvd4gQ-vIT4mxk97LREdZs1Zg8
"""

import os
from PIL import Image
from google.colab import files

# Function to encode a message into an image
def encode_message(image_path, message, output_path):
    if not os.path.exists(image_path):
        print(f"❌ File not found: {image_path}")
        return

    img = Image.open(image_path)
    binary_message = ''.join(format(ord(char), '08b') for char in message) + '1111111111111110'
    pixels = img.load()

    width, height = img.size
    data_index = 0

    for y in range(height):
        for x in range(width):
            pixel = list(pixels[x, y])

            for i in range(3):  # Modify R, G, B values
                if data_index < len(binary_message):
                    pixel[i] = pixel[i] & ~1 | int(binary_message[data_index])
                    data_index += 1

            pixels[x, y] = tuple(pixel)

            if data_index >= len(binary_message):
                break

    img.save(output_path)
    print(f"✅ Message encoded and saved to {output_path}")
    files.download(output_path)

# Function to decode a message from an image
def decode_message(image_path):
    if not os.path.exists(image_path):
        print(f"❌ File not found: {image_path}")
        return

    img = Image.open(image_path)
    binary_message = ""
    pixels = img.load()

    width, height = img.size

    for y in range(height):
        for x in range(width):
            pixel = pixels[x, y]
            for i in range(3):
                binary_message += str(pixel[i] & 1)

    bits = [binary_message[i:i+8] for i in range(0, len(binary_message), 8)]
    message = ''.join(chr(int(bit, 2)) for bit in bits)
    end_marker = message.find('\uFFFF')

    return message[:end_marker] if end_marker != -1 else message

# Main program
def main():
    choice = input("Choose (1) Encode or (2) Decode: ")

    if choice == "1":
        print("Upload the image file for encoding")
        uploaded = files.upload()
        image_path = list(uploaded.keys())[0]

        message = input("Enter the secret message: ")
        output_path = input("Enter the output image path (e.g., encoded_image.png): ")

        encode_message(image_path, message, output_path)

    elif choice == "2":
        print("Upload the encoded image file for decoding")
        uploaded = files.upload()
        image_path = list(uploaded.keys())[0]

        secret_message = decode_message(image_path)
        print(f"\n🔓 Decoded message: {secret_message}")

    else:
        print("Invalid choice! Please select 1 or 2.")

if __name__ == "__main__":
    main()

# 📂 Example paths:
# Input: Upload image using Colab's file upload
# Output: Encoded image downloaded to your system

# Let me know if you’d like me to refine anything further! 🚀